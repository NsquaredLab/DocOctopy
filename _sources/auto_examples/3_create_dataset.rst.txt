
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/3_create_dataset.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_3_create_dataset.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_3_create_dataset.py:


Creating a dataset
===========================

This example shows how to create a dataset for training a deep learning model.


.. GENERATED FROM PYTHON SOURCE LINES 11-14

In this example we will create a dataset that was used in our real-time paper [1]_.

.. [1] Sîmpetru, R.C., März, M., Del Vecchio, A., 2023. Proportional and Simultaneous Real-Time Control of the Full Human Hand From High-Density Electromyography. IEEE TNSRE 31, 3118–3131. https://doi.org/10/gsgk4s

.. GENERATED FROM PYTHON SOURCE LINES 14-75

.. code-block:: Python

    from functools import partial
    from pathlib import Path

    import numpy as np
    from scipy.signal import butter

    from doc_octopy.datasets.filters.emg_augmentations import WaveletDecomposition
    from doc_octopy.datasets.filters.generic import ApplyFunctionFilter, IndexDataFilter
    from doc_octopy.datasets.filters.temporal import SOSFrequencyFilter
    from doc_octopy.datasets.supervised import EMGDataset

    dataset = EMGDataset(
        emg_data_path=Path("data/emg.pkl").resolve(),
        ground_truth_data_path=Path("data/kinematics.pkl").resolve(),
        sampling_frequency=2044.0,
        tasks_to_use=["1", "2"],
        save_path=Path(r"data/dataset.zarr").resolve(),
        emg_filter_pipeline_after_chunking=[
            [
                SOSFrequencyFilter(
                    sos_filter_coefficients=butter(
                        4, [47.5, 52.5], "bandstop", output="sos", fs=2044
                    ),
                    is_output=True,
                    name="Raw No Powerline",
                ),
                SOSFrequencyFilter(
                    sos_filter_coefficients=butter(4, 20, "lowpass", output="sos", fs=2044),
                    is_output=True,
                    name="Raw No Powerline Lowpassed 20 Hz",
                ),
            ]
        ],
        emg_representations_to_filter_after_chunking=["Last"],
        ground_truth_filter_pipeline_before_chunking=[
            [
                ApplyFunctionFilter(function=np.reshape, newshape=(63, -1)),
                IndexDataFilter(indices=(slice(3, 63),)),
            ]
        ],
        ground_truth_representations_to_filter_before_chunking=["Input"],
        ground_truth_filter_after_pipeline_chunking=[
            [
                ApplyFunctionFilter(
                    function=partial(np.mean, axis=-1),
                    is_output=True,
                    name="Mean Kinematics per EMG Chunk",
                ),
            ]
        ],
        ground_truth_representations_to_filter_after_pipeline_chunking=["Last"],
        testing_split_ratio=0.3,
        validation_split_ratio=0.1,
        augmentation_pipelines=[
            [WaveletDecomposition(nr_of_grids=5, is_output=True, level=2)]
        ],
    )

    dataset.create_dataset()






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Filtering and splitting data:   0%|          | 0/2 [00:00<?, ?it/s]    Filtering and splitting data:  50%|█████     | 1/2 [00:02<00:02,  2.16s/it]    Filtering and splitting data: 100%|██████████| 2/2 [00:04<00:00,  2.19s/it]    Filtering and splitting data: 100%|██████████| 2/2 [00:04<00:00,  2.19s/it]
    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:   0%|          | 0/317 [00:00<?, ?it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:   5%|▍         | 15/317 [00:00<00:02, 144.45it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:  10%|█         | 32/317 [00:00<00:01, 157.68it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:  15%|█▌        | 49/317 [00:00<00:01, 160.88it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:  21%|██        | 66/317 [00:00<00:01, 164.39it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:  26%|██▌       | 83/317 [00:00<00:01, 165.63it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:  32%|███▏      | 100/317 [00:00<00:01, 166.98it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:  37%|███▋      | 117/317 [00:00<00:01, 165.84it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:  42%|████▏     | 134/317 [00:00<00:01, 164.79it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:  48%|████▊     | 151/317 [00:00<00:01, 163.52it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:  53%|█████▎    | 168/317 [00:01<00:00, 160.65it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:  58%|█████▊    | 185/317 [00:01<00:00, 160.65it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:  64%|██████▎   | 202/317 [00:01<00:00, 160.05it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:  69%|██████▉   | 219/317 [00:01<00:00, 160.06it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:  74%|███████▍  | 236/317 [00:01<00:00, 160.49it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:  80%|███████▉  | 253/317 [00:02<00:01, 56.22it/s]     Augmenting with [WaveletDecomposition (WaveletDecomposition)]:  85%|████████▌ | 270/317 [00:02<00:00, 70.39it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:  91%|█████████ | 288/317 [00:02<00:00, 86.54it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:  97%|█████████▋| 306/317 [00:02<00:00, 102.40it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]: 100%|██████████| 317/317 [00:02<00:00, 122.55it/s]




.. GENERATED FROM PYTHON SOURCE LINES 76-79

Default dataset are also available. Here is an example of how to use the EMBCDataset used in [2]_.

.. [2] Sîmpetru, R.C., Osswald, M., Braun, D.I., Souza de Oliveira, D., Cakici, A.L., Del Vecchio, A., 2022. Accurate continuous prediction of 14 degrees of freedom of the hand from myoelectrical signals through convolutive deep learning, in: Proceedings of the 2022 44th Annual International Conference of the IEEE Engineering in Medicine & Biology Society (EMBC). Presented at the 2022 44th Annual International Conference of the IEEE Engineering in Medicine & Biology Society (EMBC), pp. 702–706. https://doi.org/10/gq2f47

.. GENERATED FROM PYTHON SOURCE LINES 79-89

.. code-block:: Python

    from doc_octopy.datasets.defaults import EMBCDataset

    dataset = EMBCDataset(
        emg_data_path=Path("data/emg.pkl").resolve(),
        ground_truth_data_path=Path("data/kinematics.pkl").resolve(),
        save_path=Path(r"data/dataset.zarr").resolve(),
        tasks_to_use=["1", "2"],
    )

    dataset.create_dataset()




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Filtering and splitting data:   0%|          | 0/2 [00:00<?, ?it/s]    Filtering and splitting data:  50%|█████     | 1/2 [00:01<00:01,  1.47s/it]    Filtering and splitting data: 100%|██████████| 2/2 [00:02<00:00,  1.47s/it]    Filtering and splitting data: 100%|██████████| 2/2 [00:02<00:00,  1.47s/it]
    Augmenting with [GaussianNoise (GaussianNoise)]:   0%|          | 0/317 [00:00<?, ?it/s]    Augmenting with [GaussianNoise (GaussianNoise)]:   0%|          | 1/317 [00:01<08:19,  1.58s/it]    Augmenting with [GaussianNoise (GaussianNoise)]:   5%|▌         | 17/317 [00:01<00:21, 13.82it/s]    Augmenting with [GaussianNoise (GaussianNoise)]:  10%|█         | 33/317 [00:01<00:09, 29.24it/s]    Augmenting with [GaussianNoise (GaussianNoise)]:  15%|█▌        | 48/317 [00:01<00:05, 44.88it/s]    Augmenting with [GaussianNoise (GaussianNoise)]:  20%|██        | 64/317 [00:01<00:04, 62.75it/s]    Augmenting with [GaussianNoise (GaussianNoise)]:  25%|██▌       | 80/317 [00:02<00:02, 79.81it/s]    Augmenting with [GaussianNoise (GaussianNoise)]:  30%|███       | 96/317 [00:02<00:02, 95.32it/s]    Augmenting with [GaussianNoise (GaussianNoise)]:  35%|███▌      | 112/317 [00:02<00:01, 109.03it/s]    Augmenting with [GaussianNoise (GaussianNoise)]:  40%|████      | 128/317 [00:02<00:01, 121.18it/s]    Augmenting with [GaussianNoise (GaussianNoise)]:  45%|████▌     | 144/317 [00:02<00:01, 131.02it/s]    Augmenting with [GaussianNoise (GaussianNoise)]:  50%|█████     | 160/317 [00:02<00:01, 138.68it/s]    Augmenting with [GaussianNoise (GaussianNoise)]:  56%|█████▌    | 176/317 [00:02<00:00, 142.43it/s]    Augmenting with [GaussianNoise (GaussianNoise)]:  61%|██████    | 192/317 [00:02<00:00, 147.31it/s]    Augmenting with [GaussianNoise (GaussianNoise)]:  66%|██████▌   | 208/317 [00:02<00:00, 147.74it/s]    Augmenting with [GaussianNoise (GaussianNoise)]:  71%|███████   | 224/317 [00:03<00:00, 148.74it/s]    Augmenting with [GaussianNoise (GaussianNoise)]:  76%|███████▌  | 240/317 [00:03<00:00, 149.61it/s]    Augmenting with [GaussianNoise (GaussianNoise)]:  81%|████████  | 256/317 [00:03<00:00, 149.21it/s]    Augmenting with [GaussianNoise (GaussianNoise)]:  86%|████████▌ | 272/317 [00:03<00:00, 149.51it/s]    Augmenting with [GaussianNoise (GaussianNoise)]:  91%|█████████ | 288/317 [00:03<00:00, 149.46it/s]    Augmenting with [GaussianNoise (GaussianNoise)]:  96%|█████████▌| 304/317 [00:03<00:00, 149.63it/s]    Augmenting with [GaussianNoise (GaussianNoise)]: 100%|██████████| 317/317 [00:03<00:00, 86.96it/s] 
    Augmenting with [MagnitudeWarping (MagnitudeWarping)]:   0%|          | 0/317 [00:00<?, ?it/s]    Augmenting with [MagnitudeWarping (MagnitudeWarping)]:   5%|▌         | 17/317 [00:00<00:01, 162.52it/s]    Augmenting with [MagnitudeWarping (MagnitudeWarping)]:  11%|█▏        | 36/317 [00:00<00:01, 177.04it/s]    Augmenting with [MagnitudeWarping (MagnitudeWarping)]:  18%|█▊        | 56/317 [00:00<00:01, 185.85it/s]    Augmenting with [MagnitudeWarping (MagnitudeWarping)]:  24%|██▍       | 76/317 [00:00<00:01, 190.41it/s]    Augmenting with [MagnitudeWarping (MagnitudeWarping)]:  30%|███       | 96/317 [00:00<00:01, 189.70it/s]    Augmenting with [MagnitudeWarping (MagnitudeWarping)]:  36%|███▋      | 115/317 [00:00<00:01, 188.69it/s]    Augmenting with [MagnitudeWarping (MagnitudeWarping)]:  42%|████▏     | 134/317 [00:00<00:00, 184.75it/s]    Augmenting with [MagnitudeWarping (MagnitudeWarping)]:  48%|████▊     | 153/317 [00:00<00:00, 185.46it/s]    Augmenting with [MagnitudeWarping (MagnitudeWarping)]:  54%|█████▍    | 172/317 [00:00<00:00, 186.13it/s]    Augmenting with [MagnitudeWarping (MagnitudeWarping)]:  60%|██████    | 191/317 [00:01<00:00, 185.69it/s]    Augmenting with [MagnitudeWarping (MagnitudeWarping)]:  66%|██████▌   | 210/317 [00:01<00:00, 185.82it/s]    Augmenting with [MagnitudeWarping (MagnitudeWarping)]:  72%|███████▏  | 229/317 [00:01<00:00, 185.17it/s]    Augmenting with [MagnitudeWarping (MagnitudeWarping)]:  78%|███████▊  | 248/317 [00:01<00:00, 185.34it/s]    Augmenting with [MagnitudeWarping (MagnitudeWarping)]:  84%|████████▍ | 267/317 [00:01<00:00, 184.59it/s]    Augmenting with [MagnitudeWarping (MagnitudeWarping)]:  90%|█████████ | 286/317 [00:01<00:00, 182.78it/s]    Augmenting with [MagnitudeWarping (MagnitudeWarping)]:  96%|█████████▌| 305/317 [00:01<00:00, 181.99it/s]    Augmenting with [MagnitudeWarping (MagnitudeWarping)]: 100%|██████████| 317/317 [00:01<00:00, 183.48it/s]
    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:   0%|          | 0/317 [00:00<?, ?it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:   4%|▍         | 12/317 [00:00<00:02, 119.94it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:   9%|▉         | 28/317 [00:00<00:02, 139.97it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:  14%|█▍        | 44/317 [00:00<00:01, 147.44it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:  19%|█▉        | 60/317 [00:00<00:01, 149.82it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:  24%|██▎       | 75/317 [00:00<00:01, 149.63it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:  28%|██▊       | 90/317 [00:00<00:01, 149.62it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:  33%|███▎      | 105/317 [00:00<00:01, 147.89it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:  38%|███▊      | 120/317 [00:00<00:01, 147.52it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:  43%|████▎     | 135/317 [00:00<00:01, 147.72it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:  47%|████▋     | 150/317 [00:01<00:01, 146.32it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:  52%|█████▏    | 165/317 [00:01<00:01, 144.25it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:  57%|█████▋    | 180/317 [00:01<00:00, 138.06it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:  62%|██████▏   | 195/317 [00:01<00:00, 139.10it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:  66%|██████▌   | 210/317 [00:01<00:00, 140.66it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:  71%|███████▏  | 226/317 [00:01<00:00, 143.63it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:  76%|███████▌  | 241/317 [00:01<00:00, 145.43it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:  81%|████████  | 257/317 [00:01<00:00, 146.92it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:  86%|████████▌ | 272/317 [00:01<00:00, 147.65it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:  91%|█████████ | 287/317 [00:01<00:00, 147.99it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:  95%|█████████▌| 302/317 [00:02<00:00, 148.37it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]: 100%|██████████| 317/317 [00:02<00:00, 148.58it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]: 100%|██████████| 317/317 [00:02<00:00, 145.70it/s]





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 20.232 seconds)

**Estimated memory usage:**  983 MB


.. _sphx_glr_download_auto_examples_3_create_dataset.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: 3_create_dataset.ipynb <3_create_dataset.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: 3_create_dataset.py <3_create_dataset.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: 3_create_dataset.zip <3_create_dataset.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
